import { Text } from './dataTypes';
import Thing from './Thing';
/**
 * A person (alive, dead, undead, or fictional).
 *
 * @see {@link https://schema.org/Person}
 */
export default class Person extends Thing {
    /**
     * A person (alive, dead, undead, or fictional).
     *
     * @see {@link https://schema.org/email}
     */
    emails: Array<Text>;
    /**
     * Family name. In the U.S., the last name of an Person.
     * This can be used along with givenName instead of the name property.
     *
     * @see {@link https://schema.org/familyName}
     */
    familyNames: Array<Text>;
    /**
     * Given name. In the U.S., the first name of a Person.
     * This can be used along with familyName instead of the name property.
     *
     * @see {@link https://schema.org/givenName}
     */
    givenNames: Array<Text>;
    /**
     * Create a `Person` object from a `Text` value.
     *
     * The text value can contain email and URL in the format:
     *
     *   Joe Bloggs <joe@example.com> (https://example.com/joe)
     *
     * @param text The text value to parse
     * @returns A `Person` object
     */
    static fromText(text: Text): Person;
}
