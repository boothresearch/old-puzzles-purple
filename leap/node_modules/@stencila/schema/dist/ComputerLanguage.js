"use strict";
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
var ComputerLanguage_1;
"use strict";
const decorators_1 = require("./decorators");
const Intangible_1 = __importDefault(require("./Intangible"));
/**
 * This type covers computer programming languages such as Scheme and Lisp,
 * as well as other language-like computer representations.
 * Natural languages are best represented with the Language type.
 *
 * @see {@link https://schema.org/ComputerLanguage}
 */
let ComputerLanguage = ComputerLanguage_1 = class ComputerLanguage extends Intangible_1.default {
};
// Instances of computer languages
/**
 * Javascript programming language
 *
 * @see {@link https://www.wikidata.org/wiki/Q2005}
 */
ComputerLanguage.js = new ComputerLanguage_1({ name: 'JavaScript' });
/**
 * Python general-purpose, high-level programming language
 *
 * @see {@link https://www.wikidata.org/wiki/Q28865}
 */
ComputerLanguage.py = new ComputerLanguage_1({ name: 'Python' });
/**
 * R programming language for statistical computing
 *
 * @see {@link https://www.wikidata.org/wiki/Q206904}
 */
ComputerLanguage.r = new ComputerLanguage_1({ name: 'R' });
ComputerLanguage = ComputerLanguage_1 = __decorate([
    decorators_1.type('schema:ComputerLanguage')
], ComputerLanguage);
exports.default = ComputerLanguage;
